{"version":3,"sources":["Tile.jsx","App.js","index.js","Tile.module.css"],"names":["Tile","id","color","status","checkTile","className","cn","classes","tile","onClick","initialState","tiles","shuffledArray","i","length","j","Math","floor","random","shuffle","clicks","round","opened","count","finish","reducer","state","action","cloneState","type","forEach","isFinish","lastRound","App","useReducer","dispatch","setTimeout","useEffect","map","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.83756f27.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Tile.module.css';\nimport cn from 'classnames';\n\nconst Tile = ({ id, color, status, checkTile }) => {\n  return (\n    <div className={cn(classes.tile, classes[status])}\n      onClick={() => checkTile(id, color)}></div>\n  )\n}\n\nexport default Tile;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useReducer } from 'react';\nimport './App.css';\nimport Tile from './Tile';\n\nconst tiles = [\n  { id: 1, color: 'color1', status: 'hidden' },\n  { id: 2, color: 'color1', status: 'hidden' },\n  { id: 3, color: 'color2', status: 'hidden' },\n  { id: 4, color: 'color2', status: 'hidden' },\n  { id: 5, color: 'color3', status: 'hidden' },\n  { id: 6, color: 'color3', status: 'hidden' },\n  { id: 7, color: 'color4', status: 'hidden' },\n  { id: 8, color: 'color4', status: 'hidden' },\n  { id: 9, color: 'color5', status: 'hidden' },\n  { id: 10, color: 'color5', status: 'hidden' },\n  { id: 11, color: 'color6', status: 'hidden' },\n  { id: 12, color: 'color6', status: 'hidden' },\n  { id: 13, color: 'color7', status: 'hidden' },\n  { id: 14, color: 'color7', status: 'hidden' },\n  { id: 15, color: 'color8', status: 'hidden' },\n  { id: 16, color: 'color8', status: 'hidden' },\n];\n\nconst shuffle = (tiles) => {\n  let shuffledArray = tiles;\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\n\nconst initialState = {\n  tiles: shuffle(tiles),\n  clicks: 0,\n  round: 1,\n  opened: [],\n  count: 0,\n  finish: false,\n};\n\nconst reducer = (state, action) => {\n  const cloneState = { ...state };\n\n  switch (action.type) {\n    case 'CHECK-TILE':\n      cloneState.tiles.forEach(tile => {\n        if (tile.id === action.id) {\n          tile.status = action.color;\n          cloneState.opened = [...cloneState.opened, tile];\n        };\n      });\n\n      return {\n        ...cloneState,\n        clicks: state.clicks + 1,\n      };\n    case 'SET-DEFAULT-SETTINGS':\n      cloneState.tiles.forEach(tile => {\n        if (tile.status !== 'disapear') tile.status = 'hidden';\n      });\n\n      return {\n        ...cloneState,\n      }\n    case 'SET-DISABLED-STATUS':\n      cloneState.tiles.forEach(tile => {\n        if (tile.id !== state.opened[0].id\n          && tile.id !== state.opened[1].id\n          && tile.status !== 'disapear') {\n          tile.status = 'disabled';\n        }\n      });\n\n      return {\n        ...cloneState,\n      };\n    case 'SET-ENABLE-STATUS':\n      cloneState.tiles.forEach(tile => {\n        if (tile.id !== state.opened[0].id && tile.id !== state.opened[1].id) {\n          tile.status = 'hidden';\n        }\n      });\n\n      return {\n        ...cloneState,\n      }\n    case 'DISAPEAR-TILES':\n      cloneState.tiles.forEach(tile => {\n        if (state.opened[0].id === tile.id || state.opened[1].id === tile.id) {\n          tile.status = 'disapear'\n        }\n      });\n\n      return {\n        ...cloneState,\n        count: cloneState.count + 1,\n      }\n    case 'NEXT-ROUND':\n      let isFinish = false;\n      let lastRound = 0;\n\n      if (state.count === 8) {\n        isFinish = true;\n        lastRound = state.round;\n      }\n\n      return {\n        ...state,\n        clicks: 0,\n        round: lastRound || state.round + 1,\n        opened: [],\n        finish: isFinish,\n      }\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const checkTile = (id, color) => {\n    dispatch({ type: 'CHECK-TILE', id, color });\n\n    state.opened.forEach(tile => {\n      if (tile.color === color && tile.id !== id) {\n        setTimeout(() => {\n          dispatch({ type: 'DISAPEAR-TILES', color });\n        }, 1000)\n      }\n    });\n  }\n\n  useEffect(() => {\n    if (state.clicks === 2) {\n      dispatch({ type: 'SET-DISABLED-STATUS' });\n      setTimeout(() => {\n        dispatch({ type: 'SET-DEFAULT-SETTINGS' });\n        dispatch({ type: 'NEXT-ROUND' });\n      }, 1500);\n    }\n  }, [state.clicks])\n\n  return (\n    <div className='app-wrapper'>\n      {!state.finish && <h1>Round {state.round}</h1>}\n      {state.finish && <h1>Your score: {state.round}</h1>}\n      <div className='container'>\n        {state.tiles.map((tile) => <Tile\n          id={tile.id}\n          color={tile.color}\n          status={tile.status}\n          key={tile.id}\n          dispatch={dispatch}\n          checkTile={checkTile}\n        />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"Tile_tile__25FXL\",\"hidden\":\"Tile_hidden__2X55k\",\"disabled\":\"Tile_disabled__-0EuY\",\"color1\":\"Tile_color1__19aag\",\"color2\":\"Tile_color2__21TlL\",\"color3\":\"Tile_color3__1-_td\",\"color4\":\"Tile_color4__1utwE\",\"color5\":\"Tile_color5__2PAAh\",\"color6\":\"Tile_color6__2CdQy\",\"color7\":\"Tile_color7__wvE8d\",\"color8\":\"Tile_color8__1Y31r\",\"disapear\":\"Tile_disapear__3IL4c\"};"],"sourceRoot":""}